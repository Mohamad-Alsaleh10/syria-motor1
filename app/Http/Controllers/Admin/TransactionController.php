<?php

namespace App\Http\Controllers\Admin;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Transaction;
use App\Models\User; // Make sure to import the User model
use Illuminate\Validation\Rule;

class TransactionController extends Controller
{
    /**
     * Display a listing of the financial transactions.
     *
     * @return \Illuminate\View\View
     */
    public function index()
    {
        // Fetch transactions with their associated user
        $transactions = Transaction::with('user')->paginate(10);
        return view('admin.transactions.index', compact('transactions'));
    }

    /**
     * Display the specified financial transaction.
     *
     * @param  \App\Models\Transaction  $transaction
     * @return \Illuminate\View\View
     */
    public function show(Transaction $transaction)
    {
        // Load relationships for detailed view
        $transaction->load('user'); // Load the user associated with the transaction
        return view('admin.transactions.show', compact('transaction'));
    }

    /**
     * Show the form for editing the specified financial transaction.
     *
     * @param  \App\Models\Transaction  $transaction
     * @return \Illuminate\View\View
     */
    public function edit(Transaction $transaction)
    {
        // Define possible statuses for a transaction
        $statuses = ['pending', 'completed', 'failed', 'refunded'];
        return view('admin.transactions.edit', compact('transaction', 'statuses'));
    }

    /**
     * Update the specified financial transaction in storage.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \App\Models\Transaction  $transaction
     * @return \Illuminate\Http\RedirectResponse
     */
    public function update(Request $request, Transaction $transaction)
    {
        $request->validate([
            'user_id' => 'required|exists:users,id',
            'amount' => 'required|numeric|min:0',
            'type' => ['required', 'string', Rule::in(['deposit', 'withdrawal', 'payment', 'refund'])],
            'status' => ['required', 'string', Rule::in(['pending', 'completed', 'failed', 'refunded'])],
            'payment_method' => 'nullable|string|max:255',
            'transaction_date' => 'required|date',
            'description' => 'nullable|string',
        ]);

        $transaction->update($request->all());

        return redirect()->route('admin.transactions.index')->with('success', 'Transaction updated successfully.');
    }

    /**
     * Remove the specified financial transaction from storage.
     *
     * @param  \App\Models\Transaction  $transaction
     * @return \Illuminate\Http\RedirectResponse
     */
    public function destroy(Transaction $transaction)
    {
        $transaction->delete();
        return redirect()->route('admin.transactions.index')->with('success', 'Transaction deleted successfully.');
    }

    // You might also add create/store methods if admins can manually add transactions
    // For now, we assume transactions are generated by system processes and admins manage them.
}
